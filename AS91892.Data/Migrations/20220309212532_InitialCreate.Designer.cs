// <auto-generated />
using System;
using AS91892.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AS91892.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220309212532_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AS91892.Data.Entities.Album", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AlbumCoverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ArtistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlbumCoverId");

                    b.HasIndex("ArtistId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("AS91892.Data.Entities.Artist", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("LabelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SongId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LabelId");

                    b.HasIndex("SongId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("AS91892.Data.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("AS91892.Data.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("AS91892.Data.Entities.RecordLabel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RecordLabels");
                });

            modelBuilder.Entity("AS91892.Data.Entities.Song", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CoverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<Guid?>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("CoverId");

                    b.HasIndex("GenreId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("AS91892.Data.Entities.Album", b =>
                {
                    b.HasOne("AS91892.Data.Entities.Image", "AlbumCover")
                        .WithMany()
                        .HasForeignKey("AlbumCoverId");

                    b.HasOne("AS91892.Data.Entities.Artist", null)
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId");

                    b.Navigation("AlbumCover");
                });

            modelBuilder.Entity("AS91892.Data.Entities.Artist", b =>
                {
                    b.HasOne("AS91892.Data.Entities.RecordLabel", "Label")
                        .WithMany()
                        .HasForeignKey("LabelId");

                    b.HasOne("AS91892.Data.Entities.Song", null)
                        .WithMany("Features")
                        .HasForeignKey("SongId");

                    b.Navigation("Label");
                });

            modelBuilder.Entity("AS91892.Data.Entities.Song", b =>
                {
                    b.HasOne("AS91892.Data.Entities.Album", null)
                        .WithMany("AlbumSongs")
                        .HasForeignKey("AlbumId");

                    b.HasOne("AS91892.Data.Entities.Image", "Cover")
                        .WithMany()
                        .HasForeignKey("CoverId");

                    b.HasOne("AS91892.Data.Entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId");

                    b.Navigation("Cover");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("AS91892.Data.Entities.Album", b =>
                {
                    b.Navigation("AlbumSongs");
                });

            modelBuilder.Entity("AS91892.Data.Entities.Artist", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("AS91892.Data.Entities.Song", b =>
                {
                    b.Navigation("Features");
                });
#pragma warning restore 612, 618
        }
    }
}
