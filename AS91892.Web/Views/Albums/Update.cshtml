@inject ILabelRepository LabelRepository

@model AlbumViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Update - @nameof(Album)</h1>
<hr />

<form asp-area="" method="get" asp-controller="Songs" asp-route-id="@Model.Id" asp-action="CreateView">
    <input type="hidden" asp-for="@Model.Id"/>
    <input type="submit" value="Add Songs" class="btn btn-primary"/>
</form>

<br />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" asp-controller="Artists">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                       
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <br />

            <div class="form-group">
                <label asp-for="Photo"></label>
                <br />
                <input asp-for="Photo" type="file"/>
                <br />
                <span asp-validation-for="Photo" class="text-danger"></span>
            </div>
            <br />

            <br />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<br />

<div>
    <a asp-action="Index">Back To All</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}