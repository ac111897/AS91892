@inject ILabelRepository LabelRepository

@model ArtistViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Artist</h4>

<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" asp-controller="Artists">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                       
            <div class="form-group">
                <label asp-for="ArtistName" class="control-label"></label>
                <input asp-for="ArtistName" class="form-control" />
                <span asp-validation-for="ArtistName" class="text-danger"></span>
            </div>

            <br />

            <div class="form-group">
                <label>Label: </label>
                <br />
                <select asp-for="LabelId">
                    @{
                        <option value="@Guid.Empty.ToString()">None</option>
                        foreach (var item in await LabelRepository.GetAllAsync())
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    }
                </select>
            </div>

            <br />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<br />

<div>
    <a asp-action="Index">Back To All</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}