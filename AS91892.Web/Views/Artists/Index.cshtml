@using AS91892.Data.Entities;

@model PaginatedList<Artist>

@{
    ViewData["Title"] = "Artists";
}

<h1>@ViewData["Title"]</h1>

<p>
    <a asp-action="Create">Create new</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Name | <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]"  asp-route-currentFilter="@ViewData["CurrentFilter"]">(A-Z)</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model!)
        {
            <tr>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">@Html.Encode(item.Id).ToUpper()</a>
                </td>
                <td>
                    @Html.DisplayFor(model => item.ArtistName)
                </td>
                <td>
                    <a asp-controller="Artists" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-controller="Artists" asp-action="Update" asp-route-id="@item.Id">Update</a> |
                    <a asp-controller="Artists" asp-action="Delete" asp-route-id="@item.Id" class="link-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model is null || !Model.Any()) {
    <h2>No data available</h2>
}

@{
    var previousIsDisabled = !Model!.HasPreviousPage ? "disabled" : string.Empty;
    var nextIsDisabled = !Model!.HasNextPage ? "disabled" : string.Empty;
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @previousIsDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextIsDisabled">
    Next
</a>