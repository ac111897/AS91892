@inject ILabelRepository LabelRepository
@model ArtistViewModel

@{
    ViewData["Title"] = "Update";
}

<h1>@ViewData["Title"]</h1>

<h4>Artist</h4>

<form asp-area="" method="get" asp-controller="Albums" asp-route-id="@Model.Id" asp-action="CreateView">
    <input type="hidden" asp-for="@Model.Id"/>
    <input type="submit" value="Add Albums" class="btn btn-primary"/>
</form>


<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.Encode(Model!.Id.ToString().ToUpper())
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ArtistName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ArtistName)
        </dd>
    </dl>
</div>

<br />

<div class="row">
    <div class="col-sm-4">
        <form asp-action="Update" method="post">
            <input type="hidden" asp-for="@Model.Id"/>
            <div asp-validation-summary="ModelOnly"></div>
            <div class="form-group">
                <label asp-for="ArtistName">New Name</label>
                <input asp-for="ArtistName" class="form-control" />
                <span asp-validation-for="ArtistName" class="text-danger"></span>
            </div>

            
            <div class="form-group">
                <label>Label: </label>
                <br />
                <select asp-for="LabelId">
                    @{
                        <option value="@Guid.Empty.ToString()">None</option>
                        foreach (var item in await LabelRepository.GetAllAsync())
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    }
                </select>
            </div>

            <br />
            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}