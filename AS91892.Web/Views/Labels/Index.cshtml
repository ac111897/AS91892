@using System.Globalization

@model PaginatedList<RecordLabel>

@{
    ViewData["Title"] = "Labels";
}

<h1>@ViewData["Title"]</h1>

<p>
    <a asp-action="Create">Create new</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Name
            </th>
            <th></th>
        </tr>
    </thead>
    @if (Model is not null && Model.Any())
    {
        foreach (var item in Model)
        {
            <tbody>
                <tr>
                    <td>
                        <a asp-controller="Labels" asp-action="Details" asp-route-id="@item.Id"> 
                            @Html.Encode(item.Id.ToString().ToUpper())
                        </a>
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.Name)
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Update" asp-route-id="@item.Id">Update</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id" class="link-danger">Delete</a> 
                    </td>
                </tr>
            </tbody>
        }
    }
</table>
@if (Model is null || !Model.Any()) {
    <h2>No data available</h2>
}

@{
    var prevDisabled = !Model!.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>