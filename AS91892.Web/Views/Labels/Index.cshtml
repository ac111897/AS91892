@using System.Globalization
@model IEnumerable<RecordLabel>

@{
    ViewData["Title"] = "Labels";
}

<p>
    <a asp-action="Create">Create new</a>
</p>

<h1>@ViewData["Title"]</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
        </tr>
    </thead>
    @if (Model is not null && Model.Any())
    {
        foreach (var item in Model)
        {
            <tbody>
                <tr>
                    <td>
                        <a asp-controller="Labels" asp-action="Details" asp-route-id="@item.Id"> 
                            @Html.Encode(item.Id.ToString().ToUpper())
                        </a>
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.Name)
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id" class="link-danger">Delete</a> 
                    </td>
                </tr>
            </tbody>
        }
    }
</table>
@if (Model is null || !Model.Any()) {
    <h2>No data available</h2>
}