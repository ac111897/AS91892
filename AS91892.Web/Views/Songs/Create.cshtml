@inject IGenreRepository GenreRepository
@model SongViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>@ViewData["Title"] - @nameof(Song)</h1>

<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" asp-controller="Songs" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label>Genre: </label>
                <br />
                <select asp-for="Genre">
                    @{
                        foreach (var item in await GenreRepository.GetAllAsync())
                        {
                            <option value="@item.Id">@item.Title</option>
                        }
                    }
                </select>
            </div>
            <br />
            <div class="form-group">
                <label asp-for="Image.Photo"></label>
                <br />
                <input asp-for="Image.Photo" type="file"/>
                <br />
                <span asp-validation-for="Image.Photo" class="text-danger"></span>
            </div>

            <br />

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<br />

<div>
    <a asp-action="Index">Back To All</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}